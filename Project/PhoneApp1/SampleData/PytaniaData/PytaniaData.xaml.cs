//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.PytaniaData
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class PytaniaData { }
#else

	public class PytaniaData : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public PytaniaData()
		{
			try
			{
				Uri resourceUri = new Uri("/PhoneApp1;component/SampleData/PytaniaData/PytaniaData.xaml", UriKind.RelativeOrAbsolute);
				System.Windows.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private CollectionItemCollection _Collection = new CollectionItemCollection();

		public CollectionItemCollection Collection
		{
			get
			{
				return this._Collection;
			}
		}
	}

	public class CollectionItem : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Pytanie = string.Empty;

		public string Pytanie
		{
			get
			{
				return this._Pytanie;
			}

			set
			{
				if (this._Pytanie != value)
				{
					this._Pytanie = value;
					this.OnPropertyChanged("Pytanie");
				}
			}
		}

		private string _Odp1 = string.Empty;

		public string Odp1
		{
			get
			{
				return this._Odp1;
			}

			set
			{
				if (this._Odp1 != value)
				{
					this._Odp1 = value;
					this.OnPropertyChanged("Odp1");
				}
			}
		}

		private string _Odp2 = string.Empty;

		public string Odp2
		{
			get
			{
				return this._Odp2;
			}

			set
			{
				if (this._Odp2 != value)
				{
					this._Odp2 = value;
					this.OnPropertyChanged("Odp2");
				}
			}
		}

		private string _Odp3 = string.Empty;

		public string Odp3
		{
			get
			{
				return this._Odp3;
			}

			set
			{
				if (this._Odp3 != value)
				{
					this._Odp3 = value;
					this.OnPropertyChanged("Odp3");
				}
			}
		}
	}

	public class CollectionItemCollection : System.Collections.ObjectModel.ObservableCollection<CollectionItem>
	{ 
	}
#endif
}
